########################################################################################
get

spaces in path-definition need to be escaped ('\ ')
substitution:
    ~//     home directory
    #//     configured root directory
    src-filename will be append to dst-path, if dst-path is a directory

short options:
  -l  [path]                 get dir-list
  -L  [path]                 get dir-list from local filesystem
  -f  <src-path> [dst-path]  get file (default)
  -F  <src-path> [dst-path]  get file, force-mod
  -a  <src-path> [dst-path]  get file in archive-mod (make given dir)
  -A  <src-path> [dst-path]  get file in archive-mod (make given dir), force-mod
  -r  <src-path> [dst-path]  get all files from src-folder
  -rr <src-path> [dst-path]  get all files from src-folder, recursive
  -R  <src-path> [dst-path]  get all files from src-folder, force-mod
  -RR <src-path> [dst-path]  get all files from src-folder, recursive, force-mod

long options (requires 'get -[lL]' previously):
  --enum                    enumerate output
  --list                    list files + standard stats
  --List                    list files + all available stats
  --tform <format>          overwrite the default time-formatting # https://docs.python.org/3.9/library/time.html#time.strftime
  --tutc 1 | --tutc         enable/disable(default) utc-conversion
  --write [file]            write out

option combination (requires 'get -l' previously):
  -n<short option, except [lL]> <n> [dst-path]      select src by dir-entry-number

notes:
  [rR]-options uses the archive-mod, so dst can be a path who's not exist yet
##########################################################################################
put

spaces in path-definition need to be escaped ('\ ')
substitution:
    ~//     home directory
    #//     configured root directory
    src-filename will be append to dst-path, if dst-path is None or endswith '/'

short options:
  -f  <src-path> [dst-path]  put file (default)
  -F  <src-path> [dst-path]  put file, force-mod
  -a  <src-path> [dst-path]  put file in archive-mod (make given dir)
  -A  <src-path> [dst-path]  put file in archive-mod (make given dir), force-mod
  -r  <src-path> [dst-path]  put all files from src-folder
  -rr <src-path> [dst-path]  put all files from src-folder, recursive
  -R  <src-path> [dst-path]  put all files from src-folder, force-mod
  -RR <src-path> [dst-path]  put all files from src-folder, recursive, force-mod

option combination (requires 'get -L' previously):
  -n<short option> <n> [dst-path]      select src by dir-entry-number

notes:
  [rR]-options uses the archive-mod, so dst can be a path who's not exist yet
##########################################################################################
log

short options:
  -t <msg>      log <msg> at host-side (default)
  -j <json>     log <json> at host-side
##########################################################################################
cd

spaces in path-definition need to be escaped ('\ ')
shortcuts:
    ~//     home directory
    #//     configured root directory

short options:
  -s <src-path>     change source-path at host-side
  -d <dst-path>     change destination-path at host-side
  -S <src-path>     change source-path local
  -D <dst-path>     change destination-path local
  -a <path>         change both paths at host-side (default)
  -A <path>         change both paths local
##########################################################################################
pwd

short options (can be combined):
  -p            get path-configuration (default)
  -c            get all SecurePath configurations
  -u            get userhost
  -a            get all (equivalent to -pcu)
  -L            get all local-configurations

long options (requires 'pwd -[pcuaL]{1,3}' previously):
  --list        listing
##########################################################################################
ch

long options:
  --login       change login
##########################################################################################
reset

short options (can be combined):
  -b            get ip-board-wrapper-info as err-response
  -B            ++ reset
  -c            get secure-call-wrapper-info as err-response
  -C            ++ reset
  -f            reset firewall (clear unverified clients from cache, clear ip-board-wrapper and reset counter)
  -F            firewall full reset (++ reset connection)
  -g            close gateways and reset connection
##########################################################################################
shutdown

none option:
  host shutdown
##########################################################################################
kill

none option:
  kill and restart host
##########################################################################################
echo

none option:
  return a err-response
[argument]
  return argument as err-response
##########################################################################################
clear

none option:
  clear terminal-screen
##########################################################################################
logging

none option:
  print logger-configurations

long options:
  --allS <level>    set all stream-levels, except blackbox and SocketStream
  --allF <level>    set all file-log-levels, except blackbox
  --blackbox        enable blackbox (set file-log-level to 0)
  --debug           enable debug-mod (set all streams to level 0), except SocketStream
  --reset           reset all level-configurations to start-configuration, except SocketStream
  --io              set streams to this console-stream
  --sock [level]    set streams to SocketStream (default after login with level 20=Info)
  --sockclose       close/delete SocketStream
##########################################################################################
_err

none option:
  return a err-response
[argument]
  return argument as err-response
##########################################################################################
_pipe

direct access to sender-pipe

none option:
  start cli
[argument]
  put argument
##########################################################################################
exec

[argument]
##########################################################################################
help

implement:
  get --help
  put --help
  log --help
  cd --help
  pwd --help
  ch --help
  reset --help
  shutdown --help
  kill --help
  echo --help
  clear --help
  logging --help
  --
flags:
  - a command takes only one flag at the same time
  - long options and the short one '-L' are local operations
  - short options can't be combined, except if declared
##########################################################################################
bypass


##########################################################################################
--

get     put     log     cd      pwd
ch      reset   shutdown        kill
echo    clear   logging         bypass
##########################################################################################
